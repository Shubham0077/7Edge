// __tests__/SuccessScreen.test.tsx

import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import SuccessScreen from '../SuccessScreen';

describe('SuccessScreen Component', () => {
  const mockSetSuccessScreen = jest.fn();
  const base64PDF = btoa('Dummy PDF content');
  const mockWindowOpen = jest.fn();

  beforeEach(() => {
    jest.clearAllMocks();
    window.open = mockWindowOpen;
  });

  it('renders modal with email confirmation text when emailBtnClicked is true', () => {
    render(
      <SuccessScreen
        successScreen={true}
        setSuccessScreen={mockSetSuccessScreen}
        applicationReferenceNumber="ABC123"
        emailBtnClicked={true}
        pdf=""
      />
    );

    expect(screen.getByText(/CONGRATULATIONS/i)).toBeInTheDocument();
    expect(screen.getByText(/sent to your registered E-Mail ID/i)).toBeInTheDocument();
    expect(screen.getByText('ABC123')).toBeInTheDocument();
    expect(screen.getByText(/Back to Home/i)).toBeInTheDocument();
  });

  it('renders modal with download confirmation text when emailBtnClicked is false', () => {
    render(
      <SuccessScreen
        successScreen={true}
        setSuccessScreen={mockSetSuccessScreen}
        applicationReferenceNumber="XYZ789"
        emailBtnClicked={false}
        pdf=""
      />
    );

    expect(screen.getByText(/successfully downloaded/i)).toBeInTheDocument();
    expect(screen.getByText('XYZ789')).toBeInTheDocument();
    expect(screen.getByText(/View Certificate/i)).toBeInTheDocument();
  });

  it('closes modal and opens PDF when button clicked and pdf is not empty', () => {
    render(
      <SuccessScreen
        successScreen={true}
        setSuccessScreen={mockSetSuccessScreen}
        applicationReferenceNumber="DEF456"
        emailBtnClicked={false}
        pdf={base64PDF}
      />
    );

    const button = screen.getByTestId('continueButtonAccounts');
    fireEvent.click(button);

    expect(mockSetSuccessScreen).toHaveBeenCalledWith(false);
    expect(mockWindowOpen).toHaveBeenCalled();
  });

  it('closes modal without opening PDF if pdf is empty', () => {
    render(
      <SuccessScreen
        successScreen={true}
        setSuccessScreen={mockSetSuccessScreen}
        applicationReferenceNumber="GHI789"
        emailBtnClicked={false}
        pdf=""
      />
    );

    const button = screen.getByTestId('continueButtonAccounts');
    fireEvent.click(button);

    expect(mockSetSuccessScreen).toHaveBeenCalledWith(false);
    expect(mockWindowOpen).not.toHaveBeenCalled();
  });

  it('does not render modal if successScreen is false', () => {
    const { container } = render(
      <SuccessScreen
        successScreen={false}
        setSuccessScreen={mockSetSuccessScreen}
        applicationReferenceNumber="NOP000"
        emailBtnClicked={false}
        pdf=""
      />
    );

    expect(container.querySelector('.MuiModal-root')).not.toBeVisible();
  });
});
