import React, { useState } from 'react';
import { Box, TextField, Autocomplete, Grid, Select, InputAdornment } from '@mui/material';
import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';
import qtStyle from '../styles/paymentQuickTransfer/quickTransfer.module.css';
import SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';

const countries = [
  { code: '+91', label: 'India' },
  { code: '+971', label: 'UAE' },
  { code: '+1', label: 'USA' },
  { code: '+44', label: 'UK' },
  { code: '+61', label: 'Australia' },
];

export default function SearchDropDown() {
  const [country, setCountry] = useState(countries[1]);
  const [mobile, setMobile] = useState('');

  return (
    <Grid>
      <Select
        //disabled={isNrFlow ? LoginConstants?.FALSE : LoginConstants?.TRUE}
        //sx={err || relationshipErr ? dropdownLoginPhoneErrStyles : dropdownLoginPhoneStyles}
        className={qtStyle.Auth_RegisterMobile_MobileInputCountryCode}
        labelId="demo-simple-select-label"
        id="Auth_RegisterMobile_Demo_Simple_Select"
        value={country.code}
        data-testid="countrycodevalue"
        defaultValue={countries[0].code}
        //onChange={handleSelectChange}
      >
        <TextField
          inputProps={{
            'data-testid': 'search-input',
          }}
          placeholder="sbhjb"
          //onChange={handleSearch}
          className={qtStyle.Auth_RegisterMobile_SearchInputBox}
          autoComplete="off"
          InputProps={{
            startAdornment: (
              <InputAdornment position="start">
                <SearchOutlinedIcon />
              </InputAdornment>
            ),
          }}
        ></TextField>
        {/* {countrySearchList?.map((el: { countryName: string; countryCode: string }) => (
          <MenuItem
            key={el.countryName}
            value={el.countryCode}
            className={styles.Auth_RegisterMobile_MenuItem}
          >
            <Grid className={styles.Auth_RegisterMobile_SelectGrid}>
              <Typography className={styles.Auth_RegisterMobile_SelectText}>
                {el.countryCode}
              </Typography>
              <Typography className={styles.Auth_RegisterMobile_SelectText}>
                {el.countryName}
              </Typography>
            </Grid>
          </MenuItem>
        ))} */}
      </Select>
      <TextField
        className={qtStyle.Auth_RegisterMobile_MuiPhoneInput}
        //onChange={handlePhoneNumberChange}
        onKeyDown={(evt) => (evt.key === 'e' || evt.key === 'E') && evt.preventDefault()}
        type="number"
        value="86688778"
        autoComplete="off"
        // inputProps={{
        //   maxLength: numericConstants.ten,
        //   pattern: phoneNumberRegex,
        //   'data-testid': 'Phone-Number',
        //   ...PASSWORD_MANAGER_DISABLE_ATTRIBUTES,
        // }}
        variant="outlined"
        //sx={err || relationshipErr ? textFieldLoginPhoneErrStyles : textFieldLoginPhoneStyles}
      />
    </Grid>
  );
}
