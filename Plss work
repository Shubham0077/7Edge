import { render } from '@testing-library/react';
import * as React from 'react';
import * as reactRedux from 'react-redux';
import CreditcardBillPaymentCASA from '../../pages/CreditcardBillPaymentCASA';
import MockReduxProvider from '../../utils/MockReduxProvider';

test('sets showModal to true when enhanceCreditLimit matches crlim', () => {
  const setShowModal = jest.fn();

  // ðŸ‘‡ Mock the 1st useState (for showModal)
  const originalUseState = React.useState;
  jest.spyOn(React, 'useState')
    .mockImplementationOnce(() => [false, setShowModal]) // showModal
    .mockImplementation((...args) => originalUseState(...args)); // rest default

  // ðŸ‘‡ Mock useSelector to return matching values
  jest.spyOn(reactRedux, 'useSelector').mockImplementation((selectorFn: any) =>
    selectorFn({
      creditcardCombineReducers: {
        creditCardDashboardReducer: {
          selectedCreditCardData: {
            enhanceCreditLimit: '500000',
          },
          creditCardAccountDetails: {
            crlim: '500000', // âœ… matches
          },
        },
      },
    })
  );

  render(
    <MockReduxProvider>
      <CreditcardBillPaymentCASA />
    </MockReduxProvider>
  );

  expect(setShowModal).toHaveBeenCalledWith(true); // âœ… Covered
});
