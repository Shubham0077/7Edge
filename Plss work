import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import CreditcardBillPaymentCASA from '../../pages/CreditcardBillPaymentCASA';
import MockReduxProvider from '../../utils/MockReduxProvider';

describe('onChangeCustomAmount (with debug)', () => {
  it('renders and accepts valid input', async () => {
    const user = userEvent.setup();

    render(
      <MockReduxProvider>
        <CreditcardBillPaymentCASA />
      </MockReduxProvider>
    );

    // üí¨ 1. Print all radio labels to confirm
    screen.getAllByRole('radio').forEach((r) =>
      console.log('üìª Label:', r.parentElement?.textContent)
    );

    // ‚úÖ 2. Click Custom Amount radio by display value instead of label
    const radios = screen.getAllByRole('radio');
    const customRadio = radios.find((r) =>
      r.getAttribute('value')?.includes('CUSTOM_AMOUNT_DUE')
    );

    if (!customRadio) {
      throw new Error('‚ùå CUSTOM_AMOUNT_DUE radio not found');
    }

    await user.click(customRadio);

    // üí¨ 3. Debug: Check if the field exists after clicking
    screen.debug();

    // ‚úÖ 4. Wait for the input
    const inputWrapper = await screen.findByTestId('custom-amount-due');
    const input = inputWrapper.querySelector('input')!;
    await user.clear(input);
    await user.type(input, '100');

    const proceed = screen.getByText(/proceed/i).closest('button');
    expect(proceed).not.toBeDisabled();
  });
});
