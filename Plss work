
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import YourComponent from '../../pages/yourComponentFile'; // adjust this
import MockReduxProvider from '../../utils/MockReduxProvider';

describe('handleOptionChangeMonth function', () => {
  it('updates selectedMonthOption and resets billingCycleDate', async () => {
    const user = userEvent.setup();

    render(
      <MockReduxProvider>
        <YourComponent />
      </MockReduxProvider>
    );

    // Assume the month dropdown has a label or data-testid
    const monthDropdown = screen.getByLabelText(/Month/i); // or use getByTestId('month-dropdown')

    // Open dropdown and select an option
    await user.click(monthDropdown);
    const option = await screen.findByText('July'); // or whatever value exists
    await user.click(option);

    // Expect new value to be present in the dropdown
    expect(monthDropdown).toHaveTextContent('July'); // OR use getByDisplayValue('July')

    // Optionally assert that billingCycleDate is now ''
    // if rendered in a related field or reset state
  });
});
