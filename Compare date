export function getAvailableQuarters(selectedFY: string): { label: string; value: string }[] {
  const currentDate = new Date();
  const [startYear, endYear] = selectedFY.split("-").map(Number);

  const isCurrentFY =
    (currentDate.getFullYear() === startYear && currentDate.getMonth() >= 3) || // Apr–Dec
    (currentDate.getFullYear() === endYear && currentDate.getMonth() < 3);      // Jan–Mar

  const quarters: { label: string; value: string }[] = [];

  const quarterEndDates: Record<string, { label: string; endDate: Date }> = {
    Q1: {
      label: "Q1 (Apr–Jun)",
      endDate: new Date(startYear, 5, 30), // June 30
    },
    Q2: {
      label: "Q2 (Jul–Sep)",
      endDate: new Date(startYear, 8, 30), // Sep 30
    },
    Q3: {
      label: "Q3 (Oct–Dec)",
      endDate: new Date(startYear, 11, 31), // Dec 31
    },
    Q4: {
      label: "Q4 (Jan–Mar)",
      endDate: new Date(endYear, 2, 31), // Mar 31
    },
  };

  for (const [key, { label, endDate }] of Object.entries(quarterEndDates)) {
    const availableFrom = new Date(endDate);
    availableFrom.setDate(availableFrom.getDate() + 15);

    if (!isCurrentFY || availableFrom <= currentDate) {
      quarters.push({ label, value: key });
    }
  }

  return quarters;
}
