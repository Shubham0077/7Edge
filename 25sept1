it('should reset fields when invalid (non-numeric) price is entered', async () => {
  render(<BidTable {...mockProps} />);

  const priceField = screen.getByTestId('price-0');
  const priceInput: any = priceField.querySelector('input');

  // enter invalid string so parseInt fails
  fireEvent.change(priceInput, { target: { value: 'abc' } });
  fireEvent.blur(priceInput);

  await waitFor(() => {
    expect(priceInput.value).toBe(''); // field gets cleared
    expect(mockSetBidDataRows).toHaveBeenCalledWith(
      expect.arrayContaining([
        expect.objectContaining({
          price: '',
          amount: '',
          formattedPrice: '',
          formattedAmount: '',
        }),
      ])
    );
  });
});
