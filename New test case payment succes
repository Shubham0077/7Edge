// __tests__/AePSPaymentSuccessStatus.test.tsx
import '@testing-library/jest-dom';
import { render, screen } from '@testing-library/react';
import AePSPaymentSuccessStatus from '../path/to/AePSPaymentSuccessStatus'; // fix this path
import { useRouter } from 'next/router';
import { useLocale } from 'ui';

jest.mock('ui', () => ({
  useLocale: jest.fn(),
  Service_Request_APP: { SUCCESS: '/mocked/success.png' },
}));

jest.mock('next/router', () => ({
  useRouter: jest.fn(),
}));

jest.mock('../../redux/hooks', () => ({
  useAppDispatch: jest.fn(() => jest.fn()),
  useAppSelector: jest.fn(() => ({
    data: {
      AepsModal: {
        headerLogo: { url: '/mocked/logo.png' },
      },
    },
  })),
}));

jest.mock('react-redux', () => ({
  useSelector: jest.fn(() => ({ userProfile: { countryCode: '+91' } })),
}));

jest.mock('../VerifyOTPModal', () => () => <div data-testid="verify-otp-modal" />);
jest.mock('./aeps-payment-know-more-modal', () => () => <div data-testid="know-more-modal" />);
jest.mock('../ToastComponent', () => () => <div data-testid="toast-component" />);
jest.mock('../positive-pay/common/custom-modal', () => () => <div data-testid="custom-modal" />);
jest.mock('./aeps-payment-toggle-button', () => () => <div data-testid="toggle-button">Toggle</div>);

describe('AePSPaymentSuccessStatus (minimal test)', () => {
  beforeEach(() => {
    (useRouter as jest.Mock).mockReturnValue({ push: jest.fn() });
    (useLocale as jest.Mock).mockReturnValue({
      serviceRequest: {
        AEPS_PAYMENT_HOME_DESCRIPTION: 'Test description',
        AEPS_PAYMENT_HOME_KNOW_MORE: 'Know More',
        AEPS_PAYMENT: 'AePS',
        APES_PAYMENT_SUCCESSFUL_ENABLED: 'AePS Enabled',
        APES_PAYMENT_DISABLED_ENABLED: 'AePS Disabled',
      },
    });
  });

  it('renders basic UI components without crashing', () => {
    render(
      <AePSPaymentSuccessStatus
        mobileNumber="1234567890"
        cifId="CID123"
        aepsPaymentData={{ isEnabled: true }}
      />
    );

    expect(screen.getByAltText('Logo')).toHaveAttribute('src', '/mocked/logo.png');
    expect(screen.getByText('Test description')).toBeInTheDocument();
    expect(screen.getByText('Know More')).toBeInTheDocument();
    expect(screen.getByText('AePS')).toBeInTheDocument();
    expect(screen.getByTestId('toggle-button')).toBeInTheDocument();
  });
});
